<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 mybatis에서 처리할 SQl문을 작성하는 문서입니다. -->
<!DOCTYPE mapper PUBLIC "-//myabatis.org//DTD Mapper 3.0/EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	

<mapper namespace="movie">
	<!-- 모든 영화 불러오는 메서드 -->
	<select id="getAllMovies" resultType="movieVo">
		select M_ID, MR_ID, MG_ID, M_SUBJECT, M_POST, M_DIRECTOR, TO_CHAR(M_DATE,'YY/MM/DD') as M_DATE, M_PLOT, M_ACTOR, M_RUNTIME, M_GENRE, M_ISDELETE from movie
		  where M_ISDELETE = 'N'
	</select>
	
	<!-- 영화 조회하기 누르면 한 영화에 대한 상세정보 볼 수 있는 메서드 -->
	<select id="getMovie" resultType="movieVo" parameterType="String">
		select M_ID, MR_ID, MG_ID, M_SUBJECT, M_POST, M_DIRECTOR, TO_CHAR(M_DATE,'YY/MM/DD') as M_DATE, M_PLOT, M_ACTOR, M_RUNTIME, M_GENRE from movie
			where M_ID = #{M_ID} 
	</select>
	
	
	 <!-- 은비 -->
	<!-- 영화 정보 추가 -->
	<insert id="insertMovie" parameterType="movieVo">
		insert into movie
		(M_ID, MR_ID, M_SUBJECT, M_POST, M_PLOT, M_DIRECTOR, M_DATE, M_ACTOR, M_RUNTIME, M_GENRE)
		values(#{m_id}, #{mr_id}, #{m_subject}, #{m_post}, #{m_plot},
		#{m_director}, #{m_date}, #{m_actor}, #{m_runtime}, #{m_genre})
	</insert>


	<!-- 영화 목록 조회 -->
	<select id="getAllMngMovie" resultType="movieVo">
		select M_ID, M_SUBJECT,
        M_DIRECTOR, TO_CHAR(M_DATE,'YYYY/MM/DD') AS M_DATE, M_RUNTIME,
        M_GENRE from movie where M_ISDELETE='N' ORDER BY TO_NUMBER(SUBSTR(M_ID, 2))
	</select>


	<!-- 영화 정보 수정 -->
	<update id="updateMovie" parameterType="movieVo">
		update movie set MR_ID=#{mr_id}, M_SUBJECT =#{m_subject}, 
		M_POST = #{m_post}, M_PLOT =  #{m_plot},
		M_DIRECTOR = #{m_director}, M_DATE= #{m_date}, M_ACTOR= #{m_actor},
		M_RUNTIME= #{m_runtime},M_GENRE= #{m_genre}
		where M_ID = #{m_id}
	</update>

	
	<!-- id 값을 받아서 영화 정보 조회하기 -->
	<select id="getMovieById" parameterType="string" resultType="movieVo">
		select m_id, mr_id,
        m_subject, m_post, m_plot,
        m_director, TO_CHAR(m_date,'YYYY/MM/DD') AS m_date, m_actor, m_runtime,
        m_genre from movie where m_id = #{m_id}
	</select>


	<!-- 영화 정보 삭제하기2 -->
	<update id="deleteMovie" parameterType="String">
		update movie set M_ISDELETE='Y' where M_ID=#{m_id}
	</update>
	
	<!-- 점주ID로 영화관의 상영 영화 목록 조회 -->
	<select id="getMovieByShId" parameterType="string" resultType="movieVo">
	select
	    m.m_subject,
	    m.m_director,
	    m.m_date,
	    sum(mp.mp_qty) as total_qty
	from
	    cinema c
	    join theater th on c.cn_id = th.cn_id
	    join timetable t on th.th_id = t.th_id
	    join screening s on s.t_num = t.t_num
	    join movie m on m.m_id = s.m_id
	    join reservation r on s.sci_num = r.sci_num
	    join movie_pay mp on r.re_id = mp.re_id
	where
	    c.sh_id = #{sh_id}
	group by
	    m.m_subject,
	    m.m_director,
	    m.m_date  
	</select>
	
</mapper>